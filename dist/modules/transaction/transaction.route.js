"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const transaction_controller_1 = require("./transaction.controller");
const validateRequest_1 = require("../../middleware/validateRequest");
const transaction_validate_1 = require("./transaction.validate");
const auth_1 = require("../../middleware/auth");
const user_constrain_1 = require("../user/user.constrain");
const transactionRoutes = (0, express_1.Router)();
transactionRoutes.post("/deposit", (0, auth_1.auth)(Object.values(user_constrain_1.UserRole)), (0, validateRequest_1.validateRequest)(transaction_validate_1.transactionZodSchema.depositSchema), transaction_controller_1.TransactionController.deposit);
transactionRoutes.post("/withdraw", (0, auth_1.auth)(Object.values(user_constrain_1.UserRole)), (0, validateRequest_1.validateRequest)(transaction_validate_1.transactionZodSchema.withdrawSchema), transaction_controller_1.TransactionController.withdraw);
transactionRoutes.post("/sendMoney", (0, auth_1.auth)(Object.values(user_constrain_1.UserRole)), (0, validateRequest_1.validateRequest)(transaction_validate_1.transactionZodSchema.sendMoneySchema), transaction_controller_1.TransactionController.sendMoney);
transactionRoutes.get("/history/:walletEmail", (0, auth_1.auth)(Object.values(user_constrain_1.UserRole)), transaction_controller_1.TransactionController.getTransactionHistory);
transactionRoutes.patch("/status/:id", (0, auth_1.auth)([user_constrain_1.UserRole.Admin]), (0, validateRequest_1.validateRequest)(transaction_validate_1.transactionZodSchema.changeTransactionStatusSchema), transaction_controller_1.TransactionController.changeTransactionStatus);
transactionRoutes.get("/transaction", (0, auth_1.auth)([user_constrain_1.UserRole.Admin]), transaction_controller_1.TransactionController.getAllTransaction);
exports.default = transactionRoutes;
